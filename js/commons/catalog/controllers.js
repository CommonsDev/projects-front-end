// Generated by CoffeeScript 1.4.0
(function() {
  var module;

  module = angular.module("commons.catalog.controllers", ['commons.catalog.services']);

  module.controller("ProjectListCtrl", function($scope, Project) {
    return $scope.projects = Project.getList().$object;
  });

  module.controller("ProjectSheetCtrl", function($scope, $stateParams, ProjectSheet, Project, PostalAddress, ProjectSheetTemplate, ProjectSheetItem) {
    ProjectSheet.one().get({
      'project__slug': $stateParams.slug
    }).then(function(projectsheetResult) {
      var fillAnswer, projectID, templateID;
      console.log(projectsheetResult);
      $scope.projectsheet = projectsheetResult.objects[0];
      projectID = getObjectIdFromURI($scope.projectsheet.project);
      Project.one(projectID).get().then(function(projectResult) {
        var postalAddressId;
        $scope.projectsheet.project = projectResult;
        if ($scope.projectsheet.project.location) {
          postalAddressId = getObjectIdFromURI($scope.projectsheet.project.location);
          return $scope.projectsheet.project.location = PostalAddress.one(postalAddressId).get().$object;
        }
      });
      $scope.projectsheet.q_a = [];
      templateID = getObjectIdFromURI($scope.projectsheet.template);
      fillAnswer = function(question, i) {
        var itemID;
        itemID = getObjectIdFromURI($scope.projectsheet.items[i]);
        return ProjectSheetItem.one(itemID).get().then(function(itemResult) {
          var item;
          item = {
            'question': question,
            'answer': itemResult.answer,
            'id': itemResult.id
          };
          return $scope.projectsheet.q_a.push(item);
        });
      };
      return ProjectSheetTemplate.one(templateID).get().then(function(templateResult) {
        var i, question, _i, _len, _ref, _results;
        _ref = templateResult.questions;
        _results = [];
        for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {
          question = _ref[i];
          _results.push(fillAnswer(question, i));
        }
        return _results;
      });
    });
    return $scope.update = function(resourceName, resourceId, fieldName, data) {
      var putData;
      putData = {};
      putData[fieldName] = data;
      switch (resourceName) {
        case 'Project':
          return Project.one(resourceId).patch(putData);
        case 'ProjectSheetItem':
          return ProjectSheetItem.one(resourceId).patch(putData);
      }
    };
  });

  module.controller("ProjectSheetCreateCtrl", function($scope, $state, ProjectSheet, Project, PostalAddress, ProjectSheetTemplate, ProjectSheetItem) {
    $scope.projectsheet = {};
    ProjectSheetTemplate.one().get({
      'slug': 'makerscience'
    }).then(function(templateResult) {
      return $scope.template = templateResult.objects[0];
    });
    return $scope.save = function(projectsheet) {
      console.log("ProjectSheetCreateCtrl.save()");
      $scope.projectsheet = angular.copy(projectsheet);
      if ($scope.projectsheet.project.begin_date === void 0) {
        $scope.projectsheet.project.begin_date = new Date();
      }
      $scope.projectsheet.project.slug = slug($scope.projectsheet.project.title);
      return Project.post($scope.projectsheet.project).then(function(projectResult) {
        var postAnswer;
        $scope.projectsheet.project = projectResult.resource_uri;
        $scope.projectsheet.template = $scope.template.resource_uri;
        postAnswer = function(itemURI, answer) {
          var itemID;
          itemID = getObjectIdFromURI(itemURI);
          return ProjectSheetItem.one(itemID).patch({
            'answer': answer
          });
        };
        ProjectSheet.post($scope.projectsheet).then(function(projectsheetResult) {
          var i, itemURI, _i, _len, _ref, _results;
          _ref = projectsheetResult.items;
          _results = [];
          for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {
            itemURI = _ref[i];
            _results.push(postAnswer(itemURI, $scope.projectsheet.answers[i]));
          }
          return _results;
        });
        return $state.go('projectsheet', {
          'slug': projectResult.slug
        });
      });
    };
  });

  module.controller("PopularityCtrl", function($scope, $state) {
    $scope.votePopularity = false;
    $scope.previousUserRatings = {};
    $scope.userRatings = {};
    $scope.popularityItems = {
      'Original': {
        'maxPopularityScore': 100,
        'objectPopularityScore': 70
      },
      'Fun': {
        'maxPopularityScore': 100,
        'objectPopularityScore': 50
      },
      'Prometteur': {
        'maxPopularityScore': 100,
        'objectPopularityScore': 15
      }
    };
    return $scope.saveUserRating = function() {
      angular.forEach($scope.userRatings, function(value, key) {
        if ($scope.previousUserRatings[key]) {
          $scope.popularityItems[key].objectPopularityScore -= $scope.previousUserRatings[key];
        }
        $scope.previousUserRatings[key] = value;
        return $scope.popularityItems[key].objectPopularityScore += value;
      });
      return $scope.votePopularity = false;
    };
  });

}).call(this);
